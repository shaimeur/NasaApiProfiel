{"remainingRequest":"/home/saad/Desktop/NasaApiProfiel/node_modules/babel-loader/lib/index.js!/home/saad/Desktop/NasaApiProfiel/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/saad/Desktop/NasaApiProfiel/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/saad/Desktop/NasaApiProfiel/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/saad/Desktop/NasaApiProfiel/src/views/Test.vue?vue&type=template&id=5b2d5ecc","dependencies":[{"path":"/home/saad/Desktop/NasaApiProfiel/src/views/Test.vue","mtime":1624847664533},{"path":"/home/saad/Desktop/NasaApiProfiel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/saad/Desktop/NasaApiProfiel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/saad/Desktop/NasaApiProfiel/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/home/saad/Desktop/NasaApiProfiel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/saad/Desktop/NasaApiProfiel/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgeyBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUsIHJlbmRlckxpc3QgYXMgX3JlbmRlckxpc3QsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgdG9EaXNwbGF5U3RyaW5nIGFzIF90b0Rpc3BsYXlTdHJpbmcsIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlIH0gZnJvbSAidnVlIjsKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJjb250YWluZXItZmx1aWQiCn07CnZhciBfaG9pc3RlZF8yID0gewogIGNsYXNzOiAiXG4gICAgICAgIGNvbC1sZy02XG4gICAgICAgIGNvbC1sZy1vZmZzZXQtMFxuICAgICAgICBjb2wtbWQtNlxuICAgICAgICBjb2wtbWQtb2Zmc2V0LTBcbiAgICAgICAgY29sLXNtLTEwXG4gICAgICAgIGNvbC1zbS1vZmZzZXQtMVxuICAgICAgICBjb2wteHMtMTJcbiAgICAgICIKfTsKdmFyIF9ob2lzdGVkXzMgPSB7CiAgdmlld0JveDogIjAgMCAyMDAgMjAwIiwKICB2ZXJzaW9uOiAiMS4xIiwKICBwcmVzZXJ2ZUFzcGVjdFJhdGlvOiAibm9uZSIsCiAgeG1sbnM6ICJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKfTsKdmFyIF9ob2lzdGVkXzQgPSB7CiAgaWQ6ICJtYXNrIiwKICB4OiAiMCIsCiAgeTogIjAiLAogIHdpZHRoOiAiMTAwJSIsCiAgaGVpZ2h0OiAiMTAwJSIKfTsKCnZhciBfaG9pc3RlZF81ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgicmVjdCIsIHsKICBpZDogImFscGhhIiwKICB4OiAiMCIsCiAgeTogIjAiLAogIHdpZHRoOiAiMTAwJSIsCiAgaGVpZ2h0OiAiMTAwJSIKfSwgbnVsbCwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzYgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJyZWN0IiwgewogIGlkOiAiYmFzZSIsCiAgeDogIjAiLAogIHk6ICIwIiwKICB3aWR0aDogIjEwMCUiLAogIGhlaWdodDogIjEwMCUiCn0sIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF8yLCBbX2NyZWF0ZVZOb2RlKCJmaWd1cmUiLCBudWxsLCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCB7CiAgICBjbGFzczogIm1lZGlhIiwKICAgIHN0eWxlOiAiYmFja2dyb3VuZC1pbWFnZTogdXJsKCIuY29uY2F0KCRkYXRhLnVybCwgIik7IikKICB9LCBudWxsLCA0CiAgLyogU1RZTEUgKi8KICApLCBfY3JlYXRlVk5vZGUoImZpZ2NhcHRpb24iLCBudWxsLCBbKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJzdmciLCBfaG9pc3RlZF8zLCBbX2NyZWF0ZVZOb2RlKCJkZWZzIiwgbnVsbCwgW19jcmVhdGVWTm9kZSgibWFzayIsIF9ob2lzdGVkXzQsIFtfaG9pc3RlZF81LCAoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoJGRhdGEudGl0bGUuc3BsaXQoJyAnKSwgZnVuY3Rpb24gKHdvcmQsIGkpIHsKICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygidGV4dCIsIHsKICAgICAga2V5OiBpLAogICAgICBjbGFzczogInRpdGxlIiwKICAgICAgZHg6ICI1MCUiLAogICAgICBkeTogIiIuY29uY2F0KDIuNSArIGksICJlbSIpCiAgICB9LCBfdG9EaXNwbGF5U3RyaW5nKHdvcmQudG9VcHBlckNhc2UoKSksIDkKICAgIC8qIFRFWFQsIFBST1BTICovCiAgICAsIFsiZHkiXSk7CiAgfSksIDEyOAogIC8qIEtFWUVEX0ZSQUdNRU5UICovCiAgKSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiA8dGV4dCBjbGFzcz1cInRpdGxlXCIgZHg9XCI1MCVcIiBkeT1cIjMuNWVtXCI+RVZFUlk8L3RleHQ+XG4gICAgICAgICAgICAgICAgPHRleHQgY2xhc3M9XCJ0aXRsZVwiIGR4PVwiNTAlXCIgZHk9XCI0LjVlbVwiPk1PTUVOVDwvdGV4dD4gIildKV0pLCBfaG9pc3RlZF82XSkpLCBfY3JlYXRlQ29tbWVudFZOb2RlKCIgPGRpdiBjbGFzcz1cImJvZHlcIj5cbiAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICBFbmFtZWwgcGluIHNlbHZhZ2UgaGVhbHRoIGdvdGggZWRpc29uIGJ1bGIsIHZlbm1vIGdsb3NzaWVyXG4gICAgICAgICAgICAgIHRhdHRvb2VkIGhlbGxhIGJ1dGNoZXIgY3JlZCBpUGhvbmUuXG4gICAgICAgICAgICA8L3A+XG4gICAgICAgICAgPC9kaXY+ICIpXSksIF9jcmVhdGVWTm9kZSgiYSIsIHsKICAgIGhyZWY6ICRkYXRhLnVybAogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJocmVmIl0pXSldKV0pOwp9"},{"version":3,"sources":["/home/saad/Desktop/NasaApiProfiel/src/views/Test.vue"],"names":[],"mappings":";;;;AACO,EAAA,KAAK,EAAC;;;AAEP,EAAA,KAAK,EAAC;;;AAcA,EAAA,OAAO,EAAC,a;AACR,EAAA,OAAO,EAAC,K;AACR,EAAA,mBAAmB,EAAC,M;AACpB,EAAA,KAAK,EAAC;;;AAGE,EAAA,EAAE,EAAC,M;AAAO,EAAA,CAAC,EAAC,G;AAAI,EAAA,CAAC,EAAC,G;AAAI,EAAA,KAAK,EAAC,M;AAAO,EAAA,MAAM,EAAC;;;8BAC9C,YAAA,CAA+D,MAA/D,EAA+D;AAAzD,EAAA,EAAE,EAAC,OAAsD;AAA9C,EAAA,CAAC,EAAC,GAA4C;AAAxC,EAAA,CAAC,EAAC,GAAsC;AAAlC,EAAA,KAAK,EAAC,MAA4B;AAArB,EAAA,MAAM,EAAC;AAAc,CAA/D,E,IAAA,E;;AAAA,C;;8BAcJ,YAAA,CAA8D,MAA9D,EAA8D;AAAxD,EAAA,EAAE,EAAC,MAAqD;AAA9C,EAAA,CAAC,EAAC,GAA4C;AAAxC,EAAA,CAAC,EAAC,GAAsC;AAAlC,EAAA,KAAK,EAAC,MAA4B;AAArB,EAAA,MAAM,EAAC;AAAc,CAA9D,E,IAAA,E;;AAAA,C;;;uBArCV,YAAA,CAiDM,KAjDN,EAAA,UAAA,EAiDM,CAhDJ,YAAA,CA+CM,KA/CN,EAAA,UAAA,EA+CM,CApCJ,YAAA,CAmCS,QAnCT,EAmCS,IAnCT,EAmCS,CAlCP,YAAA,CAAmE,KAAnE,EAAmE;AAA9D,IAAA,KAAK,EAAC,OAAwD;AAA/C,IAAA,KAAK,kCAA2B,KAAA,CAAA,GAA3B;AAA0C,GAAnE,E,IAAA,E;;AAAA,GAkCO,EAjCP,YAAA,CA+Ba,YA/Bb,EA+Ba,IA/Bb,EA+Ba,E,cA9BX,YAAA,CAuBM,KAvBN,EAAA,UAAA,EAuBM,CAjBJ,YAAA,CAeO,MAfP,EAeO,IAfP,EAeO,CAdL,YAAA,CAaO,MAbP,EAAA,UAAA,EAaO,CAZL,UAYK,G,kBAXL,YAAA,CAQO,SARP,EAQO,IARP,EAQO,WAAA,CAPe,KAAA,CAAA,KAAA,CAAM,KAAN,CAAW,GAAX,CAOf,EAP0B,UAAvB,IAAuB,EAAjB,CAAiB,EAAhB;yBADjB,YAAA,CAQO,MARP,EAQO;AANJ,MAAA,GAAG,EAAE,CAMD;AALL,MAAA,KAAK,EAAC,OAKD;AAJL,MAAA,EAAE,EAAC,KAIE;AAHJ,MAAA,EAAE,YAAA,MAAW,CAAX;AAGE,KARP,E,iBAOK,IAAI,CAAC,WAAL,E,CAPL,EAOqB;AAAA;AAPrB,MAOqB,CAAA,IAAA,CAPrB,C;GAQO,CARP,E;;AAAA,GAWK,GAFL,mBAAA,CAAA,2IAAA,CAEK,CAbP,CAcK,CAfP,CAiBI,EADJ,UACI,CAvBN,CA8BW,GANX,mBAAA,CAAA,0MAAA,CAMW,CA/Bb,CAiCO,EADP,YAAA,CAAmB,GAAnB,EAAmB;AAAf,IAAA,IAAI,EAAE,KAAA,CAAA;AAAS,GAAnB,EAAa,IAAb,EAAa;AAAA;AAAb,IAAa,CAAA,MAAA,CAAb,CACO,CAnCT,CAoCI,CA/CN,CAgDI,CAjDN,C","sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div\n      class=\"\n        col-lg-6\n        col-lg-offset-0\n        col-md-6\n        col-md-offset-0\n        col-sm-10\n        col-sm-offset-1\n        col-xs-12\n      \"\n    >\n      <figure>\n        <div class=\"media\" :style=\"`background-image: url(${url});`\"></div>\n        <figcaption>\n          <svg\n            viewBox=\"0 0 200 200\"\n            version=\"1.1\"\n            preserveAspectRatio=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <defs>\n              <mask id=\"mask\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\n                <rect id=\"alpha\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\"></rect>\n                <text\n                  v-for=\"(word, i) in title.split(' ')\"\n                  :key=\"i\"\n                  class=\"title\"\n                  dx=\"50%\"\n                  :dy=\"`${2.5 + i}em`\"\n                >\n                  {{ word.toUpperCase() }}\n                </text>\n                <!-- <text class=\"title\" dx=\"50%\" dy=\"3.5em\">EVERY</text>\n                <text class=\"title\" dx=\"50%\" dy=\"4.5em\">MOMENT</text> -->\n              </mask>\n            </defs>\n            <rect id=\"base\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\"></rect>\n          </svg>\n          <!-- <div class=\"body\">\n            <p>\n              Enamel pin selvage health goth edison bulb, venmo glossier\n              tattooed hella butcher cred iPhone.\n            </p>\n          </div> -->\n        </figcaption>\n        <a :href=\"url\"></a>\n      </figure>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"HelloNasa\",\n\n  data() {\n    return {\n      date: \"-\",\n      title: \"-\",\n      url: \"\",\n      description: \"\",\n    };\n  },\n\n  mounted() {\n    const apiUrl =\n      \"https://api.nasa.gov/planetary/apod?api_key=vANhpstA65mOYxlGFQaU8zYGyLlhSIsUdiVItnxT\";\n    axios\n      .get(apiUrl)\n      .then((res) => {\n        // console.log(\"res\", res);\n        this.title = res.data.title;\n        this.date = res.data.date;\n        this.url = res.data.url;\n        this.description = res.data.explanation;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  },\n};\n</script>\n\n<style>\nbody {\n  background-color: #252830;\n  color: white;\n  font-family: \"Lato\";\n}\n.container-fluid {\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translateY(-50%) translateX(-50%);\n  width: 100%;\n}\n.media {\n  background-position: center;\n  background-size: cover;\n  height: 100%;\n  position: absolute;\n  transition: all 0.3s ease;\n  width: 100%;\n}\nfigure {\n  height: 100vh;\n  overflow: hidden;\n  position: relative;\n}\nfigure a {\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n  z-index: 3;\n}\nfigure:hover .media {\n  transform: scale(1.25);\n}\nfigcaption {\n  color: #252830;\n  height: calc(100% - 30px);\n  margin: 15px;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 250px;\n}\n.body {\n  background-color: white;\n  bottom: 0;\n  padding: 15px;\n  position: absolute;\n  width: 100%;\n}\nsvg {\n  height: inherit;\n  /* width: 100%; */\n}\nsvg text {\n  text-anchor: middle;\n}\nsvg #alpha {\n  fill: white;\n}\nsvg .title {\n  font-size: 20px;\n  font-family: \"Montserrat\";\n  letter-spacing: 5px;\n}\nsvg #base {\n  fill: white;\n  -webkit-mask: url(#mask);\n  mask: url(#mask);\n}\n</style>\n"],"sourceRoot":""}]}