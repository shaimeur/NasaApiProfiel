{"remainingRequest":"/home/saad/appnasa/node_modules/babel-loader/lib/index.js!/home/saad/appnasa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/saad/appnasa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/saad/appnasa/src/components/HelloWorld.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/saad/appnasa/src/components/HelloWorld.vue","mtime":1624841335160},{"path":"/home/saad/appnasa/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/saad/appnasa/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/saad/appnasa/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/saad/appnasa/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uLmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJIZWxsb05hc2EiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXRlOiAiLSIsCiAgICAgIHRpdGxlOiAiLSIsCiAgICAgIHVybDogIiIsCiAgICAgIGRlc2NyaXB0aW9uOiAiIgogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHZhciBhcGlVcmwgPSAiaHR0cHM6Ly9hcGkubmFzYS5nb3YvcGxhbmV0YXJ5L2Fwb2Q/YXBpX2tleT12QU5ocHN0QTY1bU9ZeGxHRlFhVTh6WUd5TGxoU0lzVWRpVkl0bnhUIjsKICAgIGF4aW9zLmdldChhcGlVcmwpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAvLyBjb25zb2xlLmxvZygicmVzIiwgcmVzKTsKICAgICAgX3RoaXMudGl0bGUgPSByZXMuZGF0YS50aXRsZTsKICAgICAgX3RoaXMuZGF0ZSA9IHJlcy5kYXRhLmRhdGU7CiAgICAgIF90aGlzLnVybCA9IHJlcy5kYXRhLnVybDsKICAgICAgX3RoaXMuZGVzY3JpcHRpb24gPSByZXMuZGF0YS5leHBsYW5hdGlvbjsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgY29uc29sZS5sb2coZXJyKTsKICAgIH0pOwogIH0KfTs="},{"version":3,"sources":["/home/saad/appnasa/src/components/HelloWorld.vue"],"names":[],"mappings":";;AAWA,OAAO,KAAP,MAAkB,OAAlB;AACA,eAAe;AACb,EAAA,IAAI,EAAE,WADO;AAGb,EAAA,IAHa,kBAGN;AACL,WAAO;AACL,MAAA,IAAI,EAAE,GADD;AAEL,MAAA,KAAK,EAAE,GAFF;AAGL,MAAA,GAAG,EAAE,EAHA;AAIL,MAAA,WAAW,EAAE;AAJR,KAAP;AAMD,GAVY;AAYb,EAAA,OAZa,qBAYH;AAAA;;AACR,QAAM,MAAK,GACT,sFADF;AAEA,IAAA,KAAI,CACD,GADH,CACO,MADP,EAEG,IAFH,CAEQ,UAAC,GAAD,EAAS;AACb;AACA,MAAA,KAAI,CAAC,KAAL,GAAa,GAAG,CAAC,IAAJ,CAAS,KAAtB;AACA,MAAA,KAAI,CAAC,IAAL,GAAY,GAAG,CAAC,IAAJ,CAAS,IAArB;AACA,MAAA,KAAI,CAAC,GAAL,GAAW,GAAG,CAAC,IAAJ,CAAS,GAApB;AACA,MAAA,KAAI,CAAC,WAAL,GAAmB,GAAG,CAAC,IAAJ,CAAS,WAA5B;AACD,KARH,EASG,KATH,CASS,UAAC,GAAD,EAAS;AACd,MAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACD,KAXH;AAYD;AA3BY,CAAf","sourcesContent":["<template>\n  <div class=\"coutainer\">\n    <h1>{{ title }} at {{ date }}</h1>\n    <div class=\"corps\">\n      <img :src=\"url\" :alt=\"title\" />\n      <p class=\"description\">{{ description }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"HelloNasa\",\n\n  data() {\n    return {\n      date: \"-\",\n      title: \"-\",\n      url: \"\",\n      description: \"\",\n    };\n  },\n\n  mounted() {\n    const apiUrl =\n      \"https://api.nasa.gov/planetary/apod?api_key=vANhpstA65mOYxlGFQaU8zYGyLlhSIsUdiVItnxT\";\n    axios\n      .get(apiUrl)\n      .then((res) => {\n        // console.log(\"res\", res);\n        this.title = res.data.title;\n        this.date = res.data.date;\n        this.url = res.data.url;\n        this.description = res.data.explanation;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n.container {\n  display: flex;\n  justify-content: center;\n}\n.corps {\n}\n\n.description {\n}\nimg {\n  background-size: cover;\n  background-position: center;\n  background: no-repeat;\n}\n</style>\n"],"sourceRoot":""}]}